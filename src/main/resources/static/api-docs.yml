openapi: '3.0.0'
info:
  title: Rest API Application
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: 'user'
    description: 'Everything about users'
  - name: 'car'
    description: 'car'
paths:
  /api/v1/user:
    get:
      summary: find users by params
      operationId: findUsers
      tags:
        - 'user'
      parameters:
        - in: query
          name: request
          allowEmptyValue: true
          schema:
            $ref: '#/components/schemas/FindUsersRequest'
      responses:
        '200':
          description: 'All found users'
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '404':
          description: 'Not found'
    post:
      summary: 'Create new user'
      operationId: createUser
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: 'Created user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/user/{id}:
    get:
      summary: get User
      operationId: getUserById
      tags:
        - user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Found user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/car:
    get:
      description: 'Find cars'
      operationId: findCars
      tags:
        - car
      parameters:
        - in: query
          name: request
          description: request params for find cars
          allowEmptyValue: true
          schema:
            $ref: '#/components/schemas/CarFindRequest'
      responses:
        '200':
          description: 'Found cars'
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarResponse'

components:
  schemas:
    FindUsersRequest:
      type: object
      description: params for find users
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        phone:
          type: string
          pattern: '^((7)+([0-9]){10})$'
    UserResponse:
      type: object
      description: 'User'
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    UserRequest:
      type: object
      description: 'User request'
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
          maxLength: 11
          minLength: 11
          example: 79991232112
          pattern: '^((7)+([0-9]){10})$'
    CarFindRequest:
      type: object
      description: 'Car find request'
      properties:
        id:
          type: integer
          format: int64
        model:
          type: string
    CarResponse:
      type: object
      description: 'Car'
      properties:
        model:
          type: string
    ValidationErrorResponse:
      allOf:
        - $ref: "#/components/schemas/ErrorResponse"
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: "#/components/schemas/ErrorDescription"
    ErrorResponse:
      type: object
      description: 'Error response'
      properties:
        message:
          type: string
    ErrorDescription:
      type: object
      description: 'Error description'
      properties:
        field:
          type: string
        error:
          type: string